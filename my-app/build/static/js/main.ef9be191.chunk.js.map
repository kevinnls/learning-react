{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","value","Board","i","this","squares","renderSquare","React","Component","Game","state","history","Array","fill","isNext","stepNumber","slice","current","length","calculateWinner","setState","concat","step","status","winner","moves","map","move","desc","key","jumpTo","handleClick","lines","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"iPAIA,SAASA,EAAOC,GACd,OACE,4BACEC,UAAU,SACVC,QAASF,EAAME,SAEdF,EAAMG,O,IAKPC,E,2KACSC,GAAI,IAAD,OACd,OACE,kBAACN,EAAD,CACEI,MAAOG,KAAKN,MAAMO,QAAQF,GAC1BH,QAAS,kBAAM,EAAKF,MAAME,QAAQG,Q,+BAKtC,OACE,6BACE,yBAAKJ,UAAU,aACZK,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,IAErB,yBAAKP,UAAU,aACZK,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,IAErB,yBAAKP,UAAU,aACZK,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,S,GAzBTC,IAAMC,WAgCpBC,E,kDACJ,WAAYX,GAAQ,IAAD,8BACjB,cAAMA,IACDY,MAAQ,CACXC,QAAS,CAAC,CACRN,QAASO,MAAM,GAAGC,KAAK,MACvBC,OAAQ,MAEVC,WAAY,GAPG,E,wDAUPZ,GACV,IAAMQ,EAAUP,KAAKM,MAAMC,QAAQK,MAAM,EAAGZ,KAAKM,MAAMK,WAAa,GAC9DE,EAAUN,EAAQA,EAAQO,OAAS,GACnCb,EAAUY,EAAQZ,QAAQW,QAChC,IAAIG,EAAgBd,KAAYA,EAAQF,GAAxC,CAGAE,EAAQF,GAAKc,EAAQH,OACrB,IAAMA,EAA6B,MAAnBG,EAAQH,OAAkB,IAAM,IAChDV,KAAKgB,SACH,CACET,QAASA,EAAQU,OAAO,CAAC,CACvBhB,QAASA,EACTS,OAAQA,KAEVC,WAAYJ,EAAQO,Y,6BAGnBI,GACLlB,KAAKgB,SAAS,CACZL,WAAYO,EAEZR,OAAQV,KAAKM,MAAMC,QAAQW,GAAMR,W,+BAG3B,IAIJS,EAJG,OACDZ,EAAUP,KAAKM,MAAMC,QACrBM,EAAUN,EAAQP,KAAKM,MAAMK,YAC7BS,EAASL,EAAgBF,EAAQZ,SAGrCkB,EADEC,EACO,WAAaA,EAEb,gBAAkBP,EAAQH,OAGrC,IAAMW,EAAQd,EAAQe,KAAI,SAACJ,EAAMK,GAC/B,IAAMC,EAAOD,EACX,eAAiBA,EACjB,mBACF,OACE,wBAAIE,IAAKF,GACP,4BAAQ3B,QAAS,kBAAM,EAAK8B,OAAOH,KAAQC,OAKjD,OACE,yBAAK7B,UAAU,QACb,yBAAKA,UAAU,cACb,kBAACG,EAAD,CAAOG,QAASY,EAAQZ,QAASL,QAAS,SAACG,GAAD,OAAO,EAAK4B,YAAY5B,OAEpE,yBAAKJ,UAAU,aACb,6BAAMwB,GACN,4BAAKE,S,GAjEIlB,IAAMC,WA+EzB,SAASW,EAAgBd,GAWvB,IAVA,IAAM2B,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEA7B,EAAI,EAAGA,EAAI6B,EAAMd,OAAQf,IAAK,CAAC,IAAD,cACnB6B,EAAM7B,GADa,GAC9B8B,EAD8B,KAC3BC,EAD2B,KACxBC,EADwB,KAErC,GAAI9B,EAAQ4B,IAAM5B,EAAQ4B,KAAO5B,EAAQ6B,IAAM7B,EAAQ4B,KAAO5B,EAAQ8B,GACpE,OAAO9B,EAAQ4B,GAGnB,OAAO,KAtBTG,IAASC,OACP,kBAAC5B,EAAD,MACA6B,SAASC,eAAe,W","file":"static/js/main.ef9be191.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nfunction Square(props) {\n  return (\n    <button\n      className=\"square\"\n      onClick={props.onClick}\n    >\n      {props.value}\n    </button>\n  );\n}\n\nclass Board extends React.Component {\n  renderSquare(i) {\n    return (\n      <Square\n        value={this.props.squares[i]}\n        onClick={() => this.props.onClick(i)}\n      />\n    );\n  }\n  render() {\n    return (\n      <div>\n        <div className=\"board-row\">\n          {this.renderSquare(0)}\n          {this.renderSquare(1)}\n          {this.renderSquare(2)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(3)}\n          {this.renderSquare(4)}\n          {this.renderSquare(5)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(6)}\n          {this.renderSquare(7)}\n          {this.renderSquare(8)}\n        </div>\n      </div>\n    );\n  }\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      history: [{\n        squares: Array(9).fill(null),\n        isNext: 'X',\n      }],\n      stepNumber: 0,\n    }\n  }\n  handleClick(i) {\n    const history = this.state.history.slice(0, this.state.stepNumber + 1)\n    const current = history[history.length - 1]\n    const squares = current.squares.slice()\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n    squares[i] = current.isNext;\n    const isNext = (current.isNext === 'X') ? 'O' : 'X'\n    this.setState(\n      {\n        history: history.concat([{\n          squares: squares,\n          isNext: isNext,\n        }]),\n        stepNumber: history.length,\n      });\n  }\n  jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n      //xIsNext: (step % 2) === 0,\n      isNext: this.state.history[step].isNext,\n    });\n  }\n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const winner = calculateWinner(current.squares);\n    let status;\n    if (winner) {\n      status = 'Winner: ' + winner\n    } else {\n      status = 'Next player: ' + current.isNext\n    }\n\n    const moves = history.map((step, move) => {\n      const desc = move ?\n        'Go to move #' + move :\n        'Go to game start'\n      return (\n        <li key={move}>\n          <button onClick={() => this.jumpTo(move)}>{desc}</button>\n        </li>\n      )\n    })\n\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board squares={current.squares} onClick={(i) => this.handleClick(i)} />\n        </div>\n        <div className=\"game-info\">\n          <div>{status}</div>\n          <ol>{moves}</ol>\n        </div>\n      </div>\n    );\n  }\n}\n\n// ========================================\n\nReactDOM.render(\n  <Game />,\n  document.getElementById('root')\n);\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}"],"sourceRoot":""}